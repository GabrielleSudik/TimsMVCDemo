@model MVCDemoApp.Models.OrderCreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderCreateModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <!--this line IDs what happens when this form is used. OrdersController.Create()-->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Order.FoodId" class="control-label"></label>
                <select asp-for="Order.FoodId" asp-items="Model.FoodItems" class="form-control"></select>
                <span asp-validation-for="Order.FoodId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.Quantity" class="control-label"></label>
                <input asp-for="Order.Quantity" class="form-control" />
                <span asp-validation-for="Order.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.OrderName" class="control-label"></label>
                <input asp-for="Order.OrderName" class="form-control" />
                <span asp-validation-for="Order.OrderName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Order your food" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<!--Gab, the code for this page is in large measure the same as the Razor Pages Create page.-->
<!--Missing: a line that declares this form is a POST. Instead, this line:
    <form asp-action="Create"> tells the form to call OrdersController.Create().-->


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
